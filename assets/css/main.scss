---
---

@charset "utf-8";

/* ======== OVERRIDE SASS VARIABLES IN _sass/minimal-mistakes/skins/_bgnr.scss ======== */

@import "minimal-mistakes/skins/{{ site.minimal_mistakes_skin | default: 'default' }}"; // skin
@import "minimal-mistakes"; // main partials

/* ============ OVERRIDE CSS STYLES BY PLACING THEM BELOW ======================================= */

/* ******** FONT STUFF ******** */

html {
  font-size: 14px;
  @include breakpoint($small) { font-size: 14px; }
  @include breakpoint($medium) { font-size: 16px; }
  @include breakpoint($large) { font-size: 16px; }
  @include breakpoint($x-large) { font-size: 16px; }
}

$small-font: 0.9em;

.author__bio p, .page__content dd {
    font-size: $small-font;
}

blockquote {
  margin-left: 1em;
  border-left-color: #DFE2E5; /* Same as GitHub, inspecting the CSS in a browser */
  color: #6A737D; /* same as GitHub--CSS variable `--color-text-tertiary`, inspected in browser */
  font-style: normal;
}

/* ******** CODE STUFF ******** */

/*
In "_base.scss", the CSS formatting for the `code` class is applied to `td > code`, which means it
ONLY applies to `code` classes which are **children of** (`>`) HTML `td` elements. I want the
light grey background color to be applied to ALL code blocks, however, even code words between
back-ticks (ex: `some word`) in headings (`<h2>`, `<h1>`, or other heading elements, for instance)
or inside other non-`td` elements. To do this, simply apply the CSS `background` property to ALL
`code` classes, like this:
*/
code {
  /* force background code highlighting inside headings & all other elements too */
  background: $code-background-color;
}

/* ******** IMAGES & CONTAINERS ******** */

/* align left WITH word wrap to the right of the element */
.alignLeftWrap {
//   display: inline-block;
  float: left;
  margin-left: 0px; margin-right: 15px;
}

/* align right WITH word wrap to the left of the element */
.alignRightWrap {
  float: right;
  margin-left: 15px; margin-right: 0px;
}

/* align left withOUT word wrap--the element goes on its own line */
.alignLeftNoWrap {
  display: block; float: none;
  margin-left: 0px; margin-right: auto;
}

/* align center withOUT word wrap--the element goes on its own line */
.alignCenterNoWrap {
  display: block; float: none;
  margin-left: auto; margin-right: auto;
}

/* align right withOUT word wrap--the element goes on its own line */
.alignRightNoWrap {
  display: block; float: none;
  margin-left: auto; margin-right: 0px;
}

/* Force this element NOT to wrap around any floating elements above it which have word wrap.
Therefore, this element will begin on a new line, even if it would otherwise try to wrap
around the above element instead. */
.noWrapAroundAbove { clear: both; }

/* ******** SPACING ******** */

.greedy-nav a.site-title {
    margin-left: 1rem;
    font-size: x-large;
}

.page__content img {
    margin: 1em 0.85em;
}

.masthead__inner-wrap {
    padding: 0.25em;
}

.page__footer { margin-top: 2em; }
.page__footer footer { margin-top: 0; padding: 0.75em 1em; }
